apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "com.google.gms.google-services"
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.qifan.emojibattle"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "Token", getLocalProperty("token")
        buildConfigField "String", "AppId", getLocalProperty("appId")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DANDROID_STL=c++_static",
                        "-DANDROID_PLATFORM=android-15",
                        "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_STL_FORCE_FEATURES=OFF",
                        "-DANDROID_ARM_NEON=TRUE"
            }
        }

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildFeatures {
        viewBinding = true
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
}

String getLocalProperty(String name) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    String value = properties.getProperty(name)
    if (value != null) {
        return value
    } else {
        throw new Exception("should have field " + name + " in your local.properties")
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation files("libs/agora-rtc-sdk.jar")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.qifan.powerpermission:powerpermission:1.3.0"
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation "com.airbnb.android:lottie:3.4.2"
    implementation "com.google.mlkit:face-detection:16.0.2"
    //koin
    implementation "org.koin:koin-android:2.1.6"
    implementation "org.koin:koin-android-scope:2.1.6"
    implementation "org.koin:koin-android-viewmodel:2.1.6"
    implementation "com.google.firebase:firebase-firestore:21.6.0"
    implementation "com.google.firebase:firebase-functions:19.1.0"
    //jetpack
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.0"

    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "com.google.android.material:material:1.3.0-alpha02"
    testImplementation "junit:junit:4.13"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
}
